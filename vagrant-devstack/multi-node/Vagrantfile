CONTROL_NODE_CONFIG = { :ip => "192.168.42.11", :memory => 4096, :cpus => 4}
NODES = {
  :control   => CONTROL_NODE_CONFIG,
  :compute1  => { :ip => "192.168.42.12", :memory => 2048, :cpus => 2},
  :compute2  => { :ip => "192.168.42.13", :memory => 2048, :cpus => 2}
}

VAGRANTFILE_API_VERSION = "2"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|

  # setup cache
  if Vagrant.has_plugin?("vagrant-cachier")
    config.cache.scope = :box
    # setup PIP cache
    config.cache.enable :generic, { "pip" => { :cache_dir => "/var/cache/pip" } }
    config.vm.provision "file", source: "pip.conf", destination: "/home/vagrant/.pip/pip.conf"
  else
    print "vagrant-cachier plugin has not been found."
    print "You can install it by `vagrant plugin install vagrant-cachier`"
  end

  config.vm.box = "precise64-cloud-image"
  config.vm.box_url = "https://cloud-images.ubuntu.com/vagrant/precise/current/precise-server-cloudimg-amd64-vagrant-disk1.box"

  NODES.each do |node_name, node_config|
    config.vm.define node_name do |node|
      node.vm.hostname = node_name
      
      # eth0: NAT network - is created by default by Vagrant
      # eth1: host-only network - to access the VM using its IP address
      node.vm.network :private_network, ip: node_config[:ip]

      node.vm.provider :virtualbox do |vb|
        vb.memory = node_config[:memory]
        vb.cpus = node_config[:cpus]
      end

      args = if node_name == :control then
        "control '#{node_config[:ip]}'"
      else
        "compute '#{node_config[:ip]}' '#{CONTROL_NODE_CONFIG[:ip]}'"
      end
      
      node.vm.provision :shell, :path => "devstack.sh", :args => args, :privileged => false, :upload_path => "/home/vagrant/devstack.sh"
    end
  end
end
